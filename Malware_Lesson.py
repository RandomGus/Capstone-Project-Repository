#Level 02
# This file will be used as a way to load up the second level,

import pygame
import sys
from Malware_Minigames import minigame01

def render_text_within_rectangle(screen, text, font, rect, color, padding_left=10, padding_right=100):
    words = text.split()
    lines = []
    current_line = ""

    max_width = rect.width - (padding_left + padding_right)

    for word in words:
        possible_new_line = current_line + word + " "
        if font.size(possible_new_line)[0] < max_width:
            current_line = possible_new_line
        else:
            lines.append(current_line)
            current_line = word + " "

    lines.append(current_line)

    y_offset = 5 

    for line in lines:
        if y_offset + font.get_height() > rect.height:
            break
        text_surface = font.render(line, True, color)
        screen.blit(text_surface, (rect.x + padding_left, rect.y + y_offset))
        y_offset += font.get_height()

# Needs to be set up as a separate definition in order to be able to import it into the Main Menu file. 
def Set_Up_Lesson_Screen(screen):

    # The following flags will be used to differentiate between the different stages that will be used for the lesson. 
    malware_lesson_menu = True
    malware_types_lesson = False
    # display_malware_lesson_settings = False

    # Here is where we will store the variables for the sound clips. 
    Malware_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Malware_Definition.wav")
    Ransomware_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Ransomware_Definition.wav")
    Spyware_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Spyware_Definition.wav")
    Adware_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Adware_Definition.wav")
    Trojans_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Trojans_Definition.wav")
    Worms_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Worms_Definition.wav")
    Keyloggers_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Keyloggers_Definition.wav")
    Bots_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Bots_Definition.wav")
    BootSectorVirus_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Boot_Sector_Virus_Definition.wav")
    Ransomware_FandS_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Ransomware_F&S.wav")
    Spyware_FandS_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Spyware_F&S.wav")
    Adware_FandS_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Adware_F&S.wav")
    Trojans_FandS_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Trojans_F&S.wav")
    Worms_FandS_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Worm_F&S.wav")
    Rootkits_FandS_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Rootkits_F&S.wav")
    Keyloggers_FandS_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Keyloggers_F&S.wav")
    Bots_FandS_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Bots_F&S.wav")
    BootSectorVirus_FandS_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Boot_Sector_Virus_F&S.wav")
    HowTo_AM_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\How to Avoid Malware.wav")
    Updates_AM_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\System and Application Updates.wav")
    SecuritySoftware_AM_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Reliable Security Software.wav")
    ClickingLinks_AM_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Clicking Links.wav")
    SafeWebsites_AM_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Visiting Safe Websites.wav")
    ExrternalDrives_AM_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\External Drives.wav")
    BackingUpData_AM_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Backing Up Your Data.wav")

    # Below the following comment will be the font that I will be using for the subtitles in the lesson. 
    subtitles_font = pygame.font.Font("Source_Code_Pro\static\SourceCodePro-Regular.ttf", 12)

    # Down below, I will store the lines that will be used for subtitles in the malware lesson. 
    malware_definition_body_text = (
        "Malware is a piece of software that is designed to disrupt, damage, or gain unauthorized access to a computer system. "
        "There is a variety of different malwares that exist and that can have a negative impact on your computer sytem. "
    )
    ransomware_definition_body_text = (
        "Ransomware is the type of malware that will encrypt the victim's files so that they are inaccessible. "
        "The attacker will attempt to get the victim to pay them so that the victim can gain access to their own files. "
        "To illustrate, once the malware is installed, your screen may be blocked with a message displaying that your files have been blocked and that they can be unblocked if you pay the attacker in some manner. "
        "Typically in the form of cryptocurrency. "
    )
    spyware_definition_body_text = (
        "Spyawre is the type of malware that will silently monitor and collect information from the victim's computer system without the victim's knowledge. "
        "The information that is collected will be transferred to another location so that the malicious actor can collect the information. "
    )
    adware_definition_body_text = (
        "Adware is malware that will automatically try to display, generate, or take you to an advertissement against the victim's wishes. "
        "Although this malware does not necessarily cause any harm to the victim's computer system, it is still annoying and can cause performance issues. "
    )
    trojans_definition_body_text = (
        "Trojans are the type of malware that will disguise themselves as legitimate applications. "
        "These Trojans can commit a multitude of differnt malicious acts on your computer system such as collecting information, creating backdoors, or just modifying files to name a few. "
    )
    worms_definition_body_text = (
        "Worms are the type of malware that are self-replicating and spread all over the computer system. "
        "This type of malware will spread all over the computer and onto other devices that are connected to the network. "
        "Some of the consequences that can result from having this type of malware are that they can consume vast amounts of resources and can carry different payloads that can affect your computer system in a negative manner. "
    )
    keyloggers_definition_body_text = (
        "Keyloggers are the type of malware that will collect information regarding what keystrokes you use on your keyboard. "
        "This way the attacker can know what you are typing and if any of the things you are typing are sensitive information so that they can collect it and use it in a malicious manner. "
    )
    bots_definition_body_text = (
        "Bots are the type of malware that will try to perform automated tasks on your computer. "
        "These tasks can vary from different cyber attacks. " 
        "Moreover, may be part of a botnet structure; thus, meaning that there are more than other devices that are infected with bot malware besides your device or computer sytem and are controlled by a central authority. "
        "This can make it possible to carry out large-scale cyber security attacks such as a Distributed Denial of Service attack. "
        )
    bootsectorvirus_definition_body_text = (
        "A Boot Sector Virus is a malware that will infect the boot sector of the primary boot record of a hard disk. "
        "This can allow this virus to deploy a malicious attack before any of your computer system's security measures can load up when you boot your computer on. "
    )
    ransomware_FandS_body_text = (
        "The way that you'll know whether or not you have ransomware installed in your computer will be pretty obvious since the attacker will send you a message stating that your files have been encrypted and you can pay the attacker to get back access. "
        "You should not pay the attacker. "
        "This is because there is no guarantee that the attacker will give you back access to your files or that they won't attack on you again. "
        "The best way to deal with the ransomware attack is by having regular backups that you can use to recover your system to a state before it was infected, by updating your software, and by practicing online safety. "
    )
    spyware_FandS_body_text = (
        "The way that you can tell that you have spyware installed on your computer system is by noticing whether or not it is having performance issues that it didn't have before. "
        "This can include, but is not limited to: Browser Changes or Access to Unauthorized Information. "
        "To remove this malware you can use specialized anti-malware or anti-spyware tools to help you get rid of the malware. "
    )
    adware_FandS_body_text = (
        "It's pretty easy to tell when you have adware since ads will pop up on your computer. "
        "When you open a browser, it may take you to a site  you didn't look up or you will notice new extensions that you didn't install. "
        "In addition, you can check for the malicious program through the control panel to see all the programs on your computer. "
        "If you see something that shouldn't be there, there's a chance this is your malicious software. "
        "To remove the malware, you could go through the control panel to remove it; however, if you have an anti-virus, it should be able to get rid of the adware. "
        "Moreover, resetting settings can fix issues from the malware modifying your browser. "
    )
    trojans_FandS_body_text = (
        "One of the ways that you can tell whether or not your computer system has been infected with trojan malware, is by noticing whether or not there have been performance changes since you have installed a piece of software, if there is unexpected network activity, your anti-virus has been deactivated, or if there are changes to your files that you did not make. "
        "To remove this type of malware, you will need to disconnect the internet in order to prevent the control server from communicating with the malware and you can use a specialized tool in order to remove the trojan malware. "
    )
    worms_FandS_body_text = (
        "The worm malware can be noticed by noticing whether or not more of the computer system or network resources are being taken up by unexpected programs or files that begin to show up on your computer. "
        "The way that you can get rid of the worm is by first disconnecting from the network. "
        "From there you can use an anti-virus and do a full system scan or restore a clean backup; however, keep in mind that you will need to check the other devices on your network to make sure they were not affected as well. "
    )
    rootkits_FandS_body_text = (
        "Rootkits are incredibly difficult to detect since they hide their presence. "
        "Some of the ways that you can tell whether or not you have a rootkit on your computer is by the symptoms that are caused by a rootkit. "
        "These symptoms can include: Instabilities in your Computer System, Disabled Security Software, or Unexpected System or Network Activity. "
        "The way that you can get rid of the rootkit is by using a specialized rootkit scanner or you can choose to load a clean backup that you had before the rootkit infected your comptuer. "
        "Finally, you can also reinstall the operating system and restore the defaults of the BIOS system to make sure everything is returned to normal. "
    )
    keyloggers_FandS_body_text = (
        "You can detect keyloggers by the use of an anti-virus or by looking at the task manager or installed applications and noticing a strange application that is running and serves no necessary purpose. "
        "From here you can select the application and uninsatll it via the control panel or some other manner. "
    )
    bots_FandS_body_text = (
        "Some of the symptoms that you can get if you have a bot are that you can begin to notice unusual network traffic activity and your system performance is going to be different than how it operates normally. "
        "The way that you can get rid of this malware is by disconnecting your device from the internet so that the bot cannot receive instructions from the central authority. "
        "You can then boot into Safe Mode and use a malware scanner to try and see if your computer has been infected with malware. "
        "Moreover, you can look for suspicious programs that may be operating in your device with Task Manager or Installed Programs and from there, you can get rid of it. "
    )
    bootsectorvirus_FandS_body_text = (
        "A boot sector virus can be identified on your computer by checking if there are any unusual startup programs on your comptuer. "
        "Moreover, you can maually check your boot sector. "
        "This is dangerous as if you make the wrong edit, it will mess up your boot system for your computer device. "
        "This type of malware can be removed from your computer system by loading up a fresh install or by rebuilding the boot sector; however, this requires more extensive knowledge. "
    )
    howtoavoidmalware_body_text = (
        "The best way to avoid malware is by practicing online safety. "
    )
    systemandapplicationupdates_body_text = (
        "The easiest way that one can practice online safety is by mkaing sure that your system and the services that you use are updated to the most current version. "
        "This will ensure that the necessary security patches are installed so they can protect your system against the most current threats. "
    )
    reliablesecuritysoftware_body_text = (
        "One of the ways that online safety can be accomplished is with the use of a reputable piece of security software. "
        "This can be an anti-virus that comes from a well known company and is able to accomplish its goal of maintaining your computer system secure. "
    )
    clickinglinks_body_text = (
        "When clicking on a website from a link or from an email, you need to be careful and make sure you are clicking on a trusted source. "
        "Never click on something that you are unsure of. "
        "This can include downloading software from untrusted sources due to how there is the risk of downloading a trojan that will cause severe issues down the road. "
    )
    safewebsites_body_text = (
        "One of the ways that you can ensure that you are visiting a safe website is by making sure that the URL starts with HTTPS."  
        "This stands for  HyperText Transfer Protcool Secure."
        "Unlike its unsecure version HTTP, it will make sure that the data that passes through the website is encrypted, it also provides authentication, and integrity by ensuring that the data exchanged between your system and the website were not altered during transmission. "
    )
    externaldrives_body_text = (
        "If you see a USB drive or some other form of external drive that does not belong to you, do not plug it in to your own computer system. "
        "For all you know, there could be malware on the drive that will be installed in to your own device. "
    )
    backingupdata_body_text = (
        "By backing up your data, you ensure that you have a copy of your computer sytem's files that you can use in the case that something should happen to the original. "
    )

    # The first screen that the player will be presented with two buttons that will allow the player to choose between the games or the lessons.
    font_malware = pygame.font.Font("Source_Code_Pro/static/SourceCodePro-Regular.ttf", 35)
    
    start_lesson_rectangle = pygame.Rect(225, 150, 400, 100)
    start_minigames_rectangle = pygame.Rect(225, 300, 400, 100)

    # settings_button = pygame.image.load("Icons_or_Images\setting.png")
    # settings_button_rectangle = pygame.Rect(700, 25, 64, 64)

    # The FOLLOWING will be text used for the pause menu.
    # pause_text_font = pygame.font.Font("Source_Code_Pro/static/SourceCodePro-SemiBold.ttf", 50)
    # pause_text = pause_text_font.render("Pause Menu", True, (255, 255, 255))
    # pause_text_coordinates = pause_text.get_rect(center=(400, 100))

    # exit_lesson_settings_button = pygame.image.load("Icons_or_Images/cancel.png")
    # exit_lesson_setting_button_rect = pygame.Rect(64, 64, 700, 50)

    # return_to_main_menu_rectangle = pygame.Rect(200, 250, 400, 150)

    # The following will be the text for the first part of the malware lesson.
    title_text_font = pygame.font.Font("Source_Code_Pro\static\SourceCodePro-SemiBold.ttf", 25)
    whatismalware_title_text = title_text_font.render("What is Malware?", True, (0, 0, 0))
    whatisransomware_title_text = title_text_font.render("What is Ransomware?", True, (0, 0, 0))
    whatisspyware_title_text = title_text_font.render("What is Spyware?", True, (0, 0, 0))
    whatisadware_title_text = title_text_font.render("What is Adware?", True, (0, 0, 0))
    whataretrojans_title_text = title_text_font.render("What are Trojans?", True, (0, 0, 0))
    whatareworms_title_text = title_text_font.render("What are Worms?", True, (0, 0, 0))
    whatarekeyloggers_title_text = title_text_font.render("What are Keyloggers?", True, (0, 0, 0))
    whatarebots_title_text = title_text_font.render("What are Bots?", True, (0, 0, 0))
    whatisbootsectorvirus_title_text = title_text_font.render("What is a Boot Sector Virus?", True, (0, 0, 0))
    identifyingandsolvingransomware_title_text = title_text_font.render("Identifying and Solving Ransomware", True, (0, 0, 0))
    identifyingandsolvingspyware_title_text = title_text_font.render("Identifying and Solving Spyware", True, (0, 0, 0))
    identifyingandsolvingadware_title_text = title_text_font.render("Identifying and Solving Adware", True, (0, 0, 0))
    identifyingandsolvingtrojans_title_text = title_text_font.render("Idenfying and Solving Trojans", True, (0, 0, 0))
    identifyingandsolvingworms_title_text = title_text_font.render("Identifying and Solving Worms", True, (0, 0, 0))
    identifyingandsolvingrootkits_title_text = title_text_font.render("Identifying and Solving Rootkits", True, (0, 0, 0))
    identifyingandsolvingkeyloggers_title_text = title_text_font.render("Identifying and Solving Keyloggers", True, (0, 0, 0))
    identifyingandsolvingbots_title_text = title_text_font.render("Identifying and Solving Bots", True, (0, 0, 0))
    identifyingandsolvingbootsectorvirus_title_text = title_text_font.render("Identifying and Solving Boot Sector Viruses", True, (0, 0, 0))
    howtoavoidmalware_title_text = title_text_font.render("How to Avoid Malware", True, (0, 0, 0))
    updates_title_text = title_text_font.render("Keep Your System and Applications Updated", True, (0, 0, 0))
    reliablesecuritysoftware_title_text = title_text_font.render("Reliable Security Software", True, (0, 0, 0))
    clickinglinks_title_text = title_text_font.render("Clicking Links", True, (0, 0, 0))
    safewebsites_title_text = title_text_font.render("Visiting Safe Websites", True, (0, 0, 0))
    externaldrives_title_text = title_text_font.render("External Drives", True, (0, 0, 0))
    backingupdata_title_text = title_text_font.render("Backing Up Your Data", True, (0, 0, 0))

    # These flags will be used in order to determine whether or not the sound has been played. 
    malware_sound_played = False
    ransomware_sound_played = False
    spyware_sound_played = False
    adware_sound_played = False
    trojans_sound_played = False
    worms_sound_played = False
    keyloggers_sound_played = False
    bots_sound_played = False
    bootsectorvirus_sound_played = False
    ransomware_FandS_sound_played = False
    spyware_FandS_sound_played = False
    adware_FandS_sound_played = False
    trojans_FandS_sound_played = False
    worms_FandS_sound_played = False
    rootkits_FandS_sound_played = False
    keyloggers_FandS_sound_played = False
    bots_FandS_sound_played = False
    bootsectorvirus_FandS_sound_played = False
    howtoavoidmalware_sound_played = False
    updates_sound_played = False
    reliablesecuritysoftware_sound_played = False
    clickinglinks_sound_played = False
    safewebsites_sound_played = False
    externaldrives_sound_played = False
    backingupdata_sound_played = False

    # This is where I will assign variables to the images that will be used for the first part of the malware lesson. 
    malware_image = pygame.image.load("Icons_or_Images/Malware_Lesson/malware_image.jpeg")
    ransomware_image = pygame.image.load("Icons_or_Images/Malware_Lesson/ransomware2_2.jpg")
    spyware_image = pygame.image.load("Icons_or_Images/Malware_Lesson/spyware.jpeg")
    adware_image1 = pygame.image.load("Icons_or_Images/Malware_Lesson/adware1.jpeg")
    trojans_image1 = pygame.image.load("Icons_or_Images/Malware_Lesson/trojans1.jpeg")
    worms_image2 = pygame.image.load("Icons_or_Images/Malware_Lesson/worms2.jpeg")
    keyloggers_image = pygame.image.load("Icons_or_Images/Malware_Lesson/keylogger_3.png")
    bots_image2 = pygame.image.load("Icons_or_Images/Malware_Lesson/bots2_3.png")
    bootsectorvirus_image = pygame.image.load("Icons_or_Images/Malware_Lesson/bootsectorvirus_2.png")
    ransomware_FandS_image = pygame.image.load("Icons_or_Images/Malware_Lesson/Ransomware_F&S3.jpg")
    spyware_FandS_image = pygame.image.load("Icons_or_Images/Malware_Lesson/Spyware_F&S2.png")
    adware_FandS_image = pygame.image.load("Icons_or_Images/Malware_Lesson/Adware_F&S3.jpg")
    trojans_FandS_image = pygame.image.load("Icons_or_Images/Malware_Lesson/Trojans_F&S2.jpg")
    worms_FandS_image = pygame.image.load("Icons_or_Images/Malware_Lesson/Worms_F&S.png")
    rootkits_FandS_image = pygame.image.load("Icons_or_Images/Malware_Lesson/Rootkits_F&S2.png")
    keyloggers_FandS_image = pygame.image.load("Icons_or_Images/Malware_Lesson/Keyloggers_F&S2.jpg")
    bots_FandS_image = pygame.image.load("Icons_or_Images/Malware_Lesson/Bots_F&S2.jpg")
    bootsectorvirus_FandS_image = pygame.image.load("Icons_or_Images/Malware_Lesson/BootSectorVirus_F&S2.jpg")
    howtoavoidmalware_image = pygame.image.load("Icons_or_Images/Malware_Lesson/AvoidingMalware1.png")
    updates_image = pygame.image.load("Icons_or_Images/Malware_Lesson/Updates2.png")
    reliablesecuritysoftware_image = pygame.image.load("Icons_or_Images/Malware_Lesson/ReliableSecuritySoftware.jpeg")
    clickinglinks_image = pygame.image.load("Icons_or_Images/Malware_Lesson/ClickingLinks2.jpg")
    safewebsites_image = pygame.image.load("Icons_or_Images/Malware_Lesson/SafeWebsites.jpeg")
    externaldrives_image = pygame.image.load("Icons_or_Images/Malware_Lesson/ExternalDrives2.jpg")
    backingupdata_image = pygame.image.load("Icons_or_Images/Malware_Lesson/DataBackup2.jpg")

    # The following variable will be used in order to keep track of what sound track will be used via a counter.
    play_button_click = 0    
    
    # The following will be used for the images and shapes that will be used for the first part of the malware lesson.
    play_button_image = pygame.image.load("Icons_or_Images/Malware_Minigame_01/play-button.png")
    play_button_image_rect = pygame.Rect(700, 500, 64, 64)
    subtitle_text_box = pygame.Rect(0, 480, 800, 120)

    running = True
    while running:

        screen.fill((0, 0, 0))

        start_malware_lesson_text = font_malware.render("Start Lesson", True, (0, 0, 0))
        start_malware_games_text = font_malware.render("Start Minigames", True, (0, 0, 0))
        start_malware_lesson__text_coordinates = start_malware_lesson_text.get_rect(center=(425, 200))
        start_malware_games_text_coordinates = start_malware_games_text.get_rect(center=(425, 350))

        pygame.draw.rect(screen, (255, 255, 255), start_lesson_rectangle, 0)
        pygame.draw.rect(screen, (255, 255, 255), start_minigames_rectangle, 0)

        mouse_position = pygame.mouse.get_pos()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
                # This will make it so that both windows quit instead of just the singular window. 
                pygame.quit()
                sys.exit()
            if event.type == pygame.MOUSEBUTTONDOWN:
                # print("The Mouse Button has been Clicked")
                if pygame.mouse.get_pressed()[0]:
                    # print("The Left Mouse Button has been Clicked")
                    # print(mouse_position)
                    if malware_lesson_menu:
                        if start_lesson_rectangle.collidepoint(mouse_position):
                            malware_types_lesson = True
                            malware_lesson_menu = False
                        elif start_minigames_rectangle.collidepoint(mouse_position):
                            minigame01(screen)
                    #     elif settings_button_rectangle.collidepoint(mouse_position):
                    #         display_malware_lesson_settings = True
                    # elif display_malware_lesson_settings:
                    #     if exit_lesson_setting_button_rect.collidepoint(mouse_position):
                    #         malware_lesson_menu = True
                    #         display_malware_lesson_settings = False
                    #     elif return_to_main_menu_rectangle.collidepoint(mouse_position):
                    #         malware_lesson_menu = True
                    #         display_malware_lesson_settings = False
                    elif malware_types_lesson:
                        if play_button_image_rect.collidepoint(mouse_position):
                            play_button_click += 1
                    
                    
                
        screen.blit(start_malware_lesson_text, start_malware_lesson__text_coordinates)
        screen.blit(start_malware_games_text, start_malware_games_text_coordinates)
        # screen.blit(settings_button, (700, 25))

        # if display_malware_lesson_settings == True:
        #     screen.fill((0, 0, 0))
        #     screen.blit(pause_text, pause_text_coordinates)
        #     screen.blit(exit_lesson_settings_button, (700, 50))
        #     pygame.draw.rect(screen, (255, 255, 255), return_to_main_menu_rectangle, 0)

        if malware_types_lesson == True:
            if play_button_click == 0:
                screen.fill((255, 255, 255))
                screen.blit(whatismalware_title_text, (300, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                render_text_within_rectangle(screen, malware_definition_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(malware_image, (175, 100))
                if malware_sound_played == False:
                    Malware_Definition_sound.play(0)
                    malware_sound_played = True
            if play_button_click == 1:
                Malware_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whatisransomware_title_text, (275, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                render_text_within_rectangle(screen, ransomware_definition_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(ransomware_image, (275, 125))
                if ransomware_sound_played == False:
                    Ransomware_Definition_sound.play(0)
                    ransomware_sound_played = True
            if play_button_click == 2:
                Ransomware_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whatisspyware_title_text, (300, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                render_text_within_rectangle(screen, spyware_definition_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(spyware_image, (175, 125))
                if spyware_sound_played == False:
                    Spyware_Definition_sound.play(0)
                    spyware_sound_played = True
            if play_button_click == 3:
                Spyware_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whatisadware_title_text, (300, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                render_text_within_rectangle(screen, adware_definition_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(adware_image1, (175, 100))
                if adware_sound_played == False:
                    Adware_Definition_sound.play(0)
                    adware_sound_played = True
            if play_button_click == 4:
                Adware_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whataretrojans_title_text, (275, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                render_text_within_rectangle(screen, trojans_definition_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(trojans_image1, (175, 125))
                if trojans_sound_played == False:
                    Trojans_Definition_sound.play(0)
                    trojans_sound_played = True
            if play_button_click == 5:
                Trojans_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whatareworms_title_text, (300, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                render_text_within_rectangle(screen, worms_definition_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(worms_image2, (175, 125))
                if worms_sound_played == False:
                    Worms_Definition_sound.play(0)
                    worms_sound_played = True
            if play_button_click == 6:
                Worms_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whatarekeyloggers_title_text, (275, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                render_text_within_rectangle(screen, keyloggers_definition_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(keyloggers_image, (175, 125))
                if keyloggers_sound_played == False:
                    Keyloggers_Definition_sound.play(0)
                    keyloggers_sound_played = True
            if play_button_click == 7:
                Keyloggers_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whatarebots_title_text, (300, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                render_text_within_rectangle(screen, bots_definition_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(bots_image2, (200, 100))
                if bots_sound_played == False:
                    Bots_Definition_sound.play(0)
                    bots_sound_played = True
            if play_button_click == 8:
                Bots_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whatisbootsectorvirus_title_text, (200, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                render_text_within_rectangle(screen, bootsectorvirus_definition_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(bootsectorvirus_image, (200, 150))
                if bootsectorvirus_sound_played == False:
                    BootSectorVirus_Definition_sound.play(0)
                    bootsectorvirus_sound_played = True
            if play_button_click == 9:
                BootSectorVirus_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(identifyingandsolvingransomware_title_text, (175, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                render_text_within_rectangle(screen, ransomware_FandS_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(ransomware_FandS_image, (125, 125))
                if ransomware_FandS_sound_played == False:
                    Ransomware_FandS_sound.play(0)
                    ransomware_FandS_sound_played = True
            if play_button_click == 10:
                Ransomware_FandS_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(identifyingandsolvingspyware_title_text, (175, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                render_text_within_rectangle(screen, spyware_FandS_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(spyware_FandS_image, (225, 150))
                if spyware_FandS_sound_played == False:
                    Spyware_FandS_sound.play(0)
                    spyware_FandS_sound_played = True
            if play_button_click == 11:
                Spyware_FandS_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(identifyingandsolvingadware_title_text, (200, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                render_text_within_rectangle(screen, adware_FandS_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(adware_FandS_image, (175, 150))
                if adware_FandS_sound_played == False:
                    Adware_FandS_sound.play(0)
                    adware_FandS_sound_played = True
            if play_button_click == 12:
                Adware_FandS_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(identifyingandsolvingtrojans_title_text, (200, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                render_text_within_rectangle(screen, trojans_FandS_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(trojans_FandS_image, (100, 100))
                if trojans_FandS_sound_played == False:
                    Trojans_FandS_sound.play(0)
                    trojans_FandS_sound_played = True
            if play_button_click == 13:
                Trojans_FandS_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(identifyingandsolvingworms_title_text, (200, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                render_text_within_rectangle(screen, worms_FandS_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(worms_FandS_image, (100, 100))
                if worms_FandS_sound_played == False:
                    Worms_FandS_sound.play(0)
                    worms_FandS_sound_played = True
            if play_button_click == 14:
                Worms_FandS_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(identifyingandsolvingrootkits_title_text, (175, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box)
                render_text_within_rectangle(screen, rootkits_FandS_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(rootkits_FandS_image, (100, 100))
                if rootkits_FandS_sound_played == False:
                    Rootkits_FandS_sound.play(0)
                    rootkits_FandS_sound_played = True
            if play_button_click == 15:
                Rootkits_FandS_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(identifyingandsolvingkeyloggers_title_text, (150, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box)
                render_text_within_rectangle(screen, keyloggers_FandS_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(keyloggers_FandS_image, (125, 100))
                if keyloggers_FandS_sound_played == False:
                    Keyloggers_FandS_sound.play(0)
                    keyloggers_FandS_sound_played = True
            if play_button_click == 16:
                Keyloggers_FandS_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(identifyingandsolvingbots_title_text, (200, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box)
                render_text_within_rectangle(screen, bots_FandS_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(bots_FandS_image, (125, 175))
                if bots_FandS_sound_played == False:
                    Bots_FandS_sound.play(0)
                    bots_FandS_sound_played = True
            if play_button_click == 17:
                Bots_FandS_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(identifyingandsolvingbootsectorvirus_title_text, (75, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box)
                render_text_within_rectangle(screen, bootsectorvirus_FandS_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(bootsectorvirus_FandS_image, (200, 150))
                if bootsectorvirus_FandS_sound_played == False:
                    BootSectorVirus_FandS_sound.play(0)
                    bootsectorvirus_sound_played = True
            if play_button_click == 18:
                BootSectorVirus_FandS_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(howtoavoidmalware_title_text, (250, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box)
                render_text_within_rectangle(screen, howtoavoidmalware_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(howtoavoidmalware_image, (250, 100))
                if howtoavoidmalware_sound_played == False:
                    HowTo_AM_sound.play(0)
                    howtoavoidmalware_sound_played = True
            if play_button_click == 19:
                HowTo_AM_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(updates_title_text, (100, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box)
                render_text_within_rectangle(screen, systemandapplicationupdates_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(updates_image, (200, 150))
                if updates_sound_played == False:
                    Updates_AM_sound.play(0)
                    updates_sound_played = True
            if play_button_click == 20:
                Updates_AM_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(reliablesecuritysoftware_title_text, (225, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box)
                render_text_within_rectangle(screen, reliablesecuritysoftware_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(reliablesecuritysoftware_image, (250, 150))
                if reliablesecuritysoftware_sound_played == False:
                    SecuritySoftware_AM_sound.play(0)
                    reliablesecuritysoftware_sound_played = True
            if play_button_click == 21:
                SecuritySoftware_AM_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(clickinglinks_title_text, (300, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box)
                render_text_within_rectangle(screen, clickinglinks_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(clickinglinks_image, (125, 85))
                if clickinglinks_sound_played == False:
                    ClickingLinks_AM_sound.play(0)
                    clickinglinks_sound_played = True
            if play_button_click == 22:
                ClickingLinks_AM_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(safewebsites_title_text, (250, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box)
                render_text_within_rectangle(screen, safewebsites_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(safewebsites_image, (275, 175))
                if safewebsites_sound_played == False:
                    SafeWebsites_AM_sound.play(0)
                    safewebsites_sound_played = True
            if play_button_click == 23:
                SafeWebsites_AM_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(externaldrives_title_text, (300, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box)
                render_text_within_rectangle(screen, externaldrives_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(externaldrives_image, (200, 150))
                if externaldrives_sound_played == False:
                    ExrternalDrives_AM_sound.play(0)
                    externaldrives_sound_played = True
            if play_button_click == 24:
                ExrternalDrives_AM_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(backingupdata_title_text, (250, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box)
                render_text_within_rectangle(screen, backingupdata_body_text, subtitles_font, subtitle_text_box, (255, 255, 255))
                screen.blit(play_button_image, (700, 500))
                screen.blit(backingupdata_image, (200, 85))
                if backingupdata_sound_played == False:
                    BackingUpData_AM_sound.play(0)
                    backingupdata_sound_played = True
            if play_button_click == 25:
                BackingUpData_AM_sound.stop()
                play_button_click = 0
                malware_lesson_menu = True
                malware_types_lesson = False

        pygame.display.update()