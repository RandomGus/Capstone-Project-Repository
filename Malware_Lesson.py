#Level 02
# This file will be used as a way to load up the second level,

import pygame
import sys
from Malware_Minigames import minigame01
from Malware_Minigames import minigame02
from Malware_Minigames import minigame03

# Needs to be set up as a separate definition in order to be able to import it into the Main Menu file. 
def Set_Up_Lesson_Screen(screen):

    # The following flags will be used to differentiate between the different stages that will be used for the lesson. 
    malware_types_lesson = False
    malware_finding_and_solving = False
    malware_avoiding = False
    display_malware_lesson_settings = False

    # Here is where we will store the variables for the sound clips. 
    Malware_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Malware_Definition.wav")
    Ransomware_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Ransomware_Definition.wav")
    Spyware_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Spyware_Definition.wav")
    Adware_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Adware_Definition.wav")
    Trojans_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Trojans_Definition.wav")
    Worms_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Worms_Definition.wav")
    Keyloggers_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Keyloggers_Definition.wav")
    Bots_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Bots_Definition.wav")
    BootSectorVirus_Definition_sound = pygame.mixer.Sound("Game_Noises\Malware_Lesson\Boot_Sector_Virus_Definition.wav")

    # The first screen that the player will be presented with two buttons that will allow the player to choose between the games or the lessons.
    font_malware = pygame.font.Font("Source_Code_Pro/static/SourceCodePro-Regular.ttf", 35)
    
    start_lesson_rectangle = pygame.Rect(225, 150, 400, 100)
    start_minigames_rectangle = pygame.Rect(225, 300, 400, 100)

    settings_button = pygame.image.load("Icons_or_Images\setting.png")
    settings_button_rectangle = pygame.Rect(700, 25, 64, 64)

    # The FOLLOWING will be temporary text.
    temporary_text_font = pygame.font.Font("Source_Code_Pro/static/SourceCodePro-Regular.ttf", 50)
    temporary_text = temporary_text_font.render("Work In Progress", True, (255, 255, 255))
    temporary_text_coordinates = temporary_text.get_rect(center=(400, 300))
    # This is the END of the temporary text.

    # The following will be the text for the first part of the malware lesson.
    title_text_font = pygame.font.Font("Source_Code_Pro\static\SourceCodePro-SemiBold.ttf", 25)
    whatismalware_title_text = title_text_font.render("What is Malware?", True, (0, 0, 0))
    whatisransomware_title_text = title_text_font.render("What is Ransomware?", True, (0, 0, 0))
    whatisspyware_title_text = title_text_font.render("What is Spyware?", True, (0, 0, 0))
    whatisadware_title_text = title_text_font.render("What is Adware?", True, (0, 0, 0))
    whataretrojans_title_text = title_text_font.render("What are Trojans?", True, (0, 0, 0))
    whatareworms_title_text = title_text_font.render("What are Worms?", True, (0, 0, 0))
    whatarekeyloggers_title_text = title_text_font.render("What are Keyloggers?", True, (0, 0, 0))
    whatarebots_title_text = title_text_font.render("What are Bots?", True, (0, 0, 0))
    whatisbootsectorvirus_title_text = title_text_font.render("What is a Boot Sector Virus?", True, (0, 0, 0))

    # These flags will be used in order to determine whether or not the sound has been played. 
    malware_sound_played = False
    ransomware_sound_played = False
    spyware_sound_played = False
    adware_sound_played = False
    trojans_sound_played = False
    worms_sound_played = False
    keyloggers_sound_played = False
    bots_sound_played = False
    bootsectorvirus_sound_played = False

    # This is where I will assign variables to the images that will be used for the first part of the malware lesson. 
    malware_image = pygame.image.load("Icons_or_Images/Malware_Lesson/malware_image.jpeg")
    ransomware_image = pygame.image.load("Icons_or_Images/Malware_Lesson/ransomware2_2.jpg")
    spyware_image = pygame.image.load("Icons_or_Images/Malware_Lesson/spyware.jpeg")
    adware_image1 = pygame.image.load("Icons_or_Images/Malware_Lesson/adware1.jpeg")
    trojans_image1 = pygame.image.load("Icons_or_Images/Malware_Lesson/trojans1.jpeg")
    worms_image2 = pygame.image.load("Icons_or_Images/Malware_Lesson/worms2.jpeg")
    keyloggers_image = pygame.image.load("Icons_or_Images/Malware_Lesson/keylogger_3.png")
    bots_image2 = pygame.image.load("Icons_or_Images/Malware_Lesson/bots2_3.png")
    bootsectorvirus_image = pygame.image.load("Icons_or_Images/Malware_Lesson/bootsectorvirus_2.png")

    WIP_text_font = pygame.font.Font("Source_Code_Pro\static\SourceCodePro-ExtraBoldItalic.ttf", 50)
    WIP_text = WIP_text_font.render("Work in Progress", True, (0, 0, 0))
    WIP_text_coordinates = WIP_text.get_rect(center=(400, 300))

    # The following variable will be used in order to keep track of what sound track will be used via a counter.
    play_button_click = 0    
    
    # The following will be used for the images and shapes that will be used for the first part of the malware lesson.
    play_button_image = pygame.image.load("Icons_or_Images/Malware_Minigame_01/play-button.png")
    play_button_image_rect = pygame.Rect(700, 500, 64, 64)
    subtitle_text_box = pygame.Rect(0, 480, 800, 120)

    running = True
    while running:

        screen.fill((0, 0, 0))

        start_malware_lesson_text = font_malware.render("Start Lesson", True, (0, 0, 0))
        start_malware_games_text = font_malware.render("Start Minigames", True, (0, 0, 0))
        start_malware_lesson__text_coordinates = start_malware_lesson_text.get_rect(center=(425, 200))
        start_malware_games_text_coordinates = start_malware_games_text.get_rect(center=(425, 350))

        pygame.draw.rect(screen, (255, 255, 255), start_lesson_rectangle, 0)
        pygame.draw.rect(screen, (255, 255, 255), start_minigames_rectangle, 0)

        mouse_position = pygame.mouse.get_pos()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
                # This will make it so that both windows quit instead of just the singular window. 
                pygame.quit()
                sys.exit()
            if event.type == pygame.MOUSEBUTTONDOWN:
                # print("The Mouse Button has been Clicked")
                if pygame.mouse.get_pressed()[0]:
                    # print("The Left Mouse Button has been Clicked")
                    print(mouse_position)
                    if start_lesson_rectangle.collidepoint(mouse_position):
                        # print("The Start Lesson Button has been Selected!")
                        malware_types_lesson = True
                    if start_minigames_rectangle.collidepoint(mouse_position):
                        # print("The Start Minigames Button has been Selected!")
                        minigame01(screen)
                    if settings_button_rectangle.collidepoint(mouse_position):
                        display_malware_lesson_settings = True
                    if play_button_image_rect.collidepoint(mouse_position) and malware_types_lesson == True:
                        print("The Play Button has been Clicked!")
                        print(play_button_click)
                        play_button_click += 1

                
        screen.blit(start_malware_lesson_text, start_malware_lesson__text_coordinates)
        screen.blit(start_malware_games_text, start_malware_games_text_coordinates)
        screen.blit(settings_button, (700, 25))

        if display_malware_lesson_settings == True:
            screen.fill((0, 0, 0))
            screen.blit(temporary_text, temporary_text_coordinates)

        if malware_types_lesson == True:
            if play_button_click == 0:
                screen.fill((255, 255, 255))
                screen.blit(whatismalware_title_text, (300, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                screen.blit(play_button_image, (700, 500))
                screen.blit(malware_image, (175, 100))
                if malware_sound_played == False:
                    Malware_Definition_sound.play(0)
                    malware_sound_played = True
            if play_button_click == 1:
                Malware_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whatisransomware_title_text, (275, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                screen.blit(play_button_image, (700, 500))
                screen.blit(ransomware_image, (275, 125))
                if ransomware_sound_played == False:
                    Ransomware_Definition_sound.play(0)
                    ransomware_sound_played = True
            if play_button_click == 2:
                Ransomware_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whatisspyware_title_text, (300, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                screen.blit(play_button_image, (700, 500))
                screen.blit(spyware_image, (175, 125))
                if spyware_sound_played == False:
                    Spyware_Definition_sound.play(0)
                    spyware_sound_played = True
            if play_button_click == 3:
                Spyware_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whatisadware_title_text, (300, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                screen.blit(play_button_image, (700, 500))
                screen.blit(adware_image1, (175, 100))
                if adware_sound_played == False:
                    Adware_Definition_sound.play(0)
                    adware_sound_played = True
            if play_button_click == 4:
                Adware_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whataretrojans_title_text, (275, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                screen.blit(play_button_image, (700, 500))
                screen.blit(trojans_image1, (175, 125))
                if trojans_sound_played == False:
                    Trojans_Definition_sound.play(0)
                    trojans_sound_played = True
            if play_button_click == 5:
                Trojans_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whatareworms_title_text, (300, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                screen.blit(play_button_image, (700, 500))
                screen.blit(worms_image2, (175, 125))
                if worms_sound_played == False:
                    Worms_Definition_sound.play(0)
                    worms_sound_played = True
            if play_button_click == 6:
                Worms_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whatarekeyloggers_title_text, (275, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                screen.blit(play_button_image, (700, 500))
                screen.blit(keyloggers_image, (175, 125))
                if keyloggers_sound_played == False:
                    Keyloggers_Definition_sound.play(0)
                    keyloggers_sound_played = True
            if play_button_click == 7:
                Keyloggers_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whatarebots_title_text, (300, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                screen.blit(play_button_image, (700, 500))
                screen.blit(bots_image2, (200, 100))
                if bots_sound_played == False:
                    Bots_Definition_sound.play(0)
                    bots_sound_played = True
            if play_button_click == 8:
                Bots_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(whatisbootsectorvirus_title_text, (200, 50))
                pygame.draw.rect(screen, (0, 0, 0), subtitle_text_box, 0)
                screen.blit(play_button_image, (700, 500))
                screen.blit(bootsectorvirus_image, (200, 150))
                if bootsectorvirus_sound_played == False:
                    BootSectorVirus_Definition_sound.play(0)
                    bootsectorvirus_sound_played = True
            if play_button_click == 9:
                BootSectorVirus_Definition_sound.stop()
                screen.fill((255, 255, 255))
                screen.blit(WIP_text, WIP_text_coordinates)
                screen.blit(play_button_image, (700, 500))

        pygame.display.update()